// Generated by CoffeeScript 1.3.1
var FakeServer, Server,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Server = (function() {

  Server.name = 'Server';

  function Server() {
    this.askForMapSegment = __bind(this.askForMapSegment, this);

    this.onMapSegment = __bind(this.onMapSegment, this);

    this.onGametime = __bind(this.onGametime, this);

    var _this = this;
    this.socket = io.connect('http://ec2-46-137-147-99.eu-west-1.compute.amazonaws.com:8081');
    this.socket.on('gametime', function(data) {
      if (_this.callbackOnGametime) {
        return _this.callbackOnGametime(data.gametime);
      } else {
        return console.log('Y U NO USE Server.onGametime??');
      }
    });
    this.socket.on('mapSegment', function(data) {
      if (_this.callbackOnMapSegment) {
        return _this.callbackOnMapSegment(data);
      } else {
        return console.log('Y U NO USE Server.onMapSegment??');
      }
    });
  }

  Server.prototype.onGametime = function(callbackOnGametime) {
    return this.callbackOnGametime = callbackOnGametime;
  };

  Server.prototype.onMapSegment = function(callbackOnMapSegment) {
    this.callbackOnMapSegment = callbackOnMapSegment;
  };

  Server.prototype.askForMapSegment = function(num) {
    return this.socket.emit('sendMapSegment', num);
  };

  return Server;

})();

FakeServer = (function() {

  FakeServer.name = 'FakeServer';

  function FakeServer() {
    this.askForMapSegment = __bind(this.askForMapSegment, this);

    this.onMapSegment = __bind(this.onMapSegment, this);

    this.onGametime = __bind(this.onGametime, this);

    /*
            @socket.on 'mapSegment', (data) =>
                if @callbackOnMapSegment 
                    @callbackOnMapSegment data
                else
                    console.log 'Y U NO USE Server.onMapSegment??'
    */

  }

  FakeServer.prototype.onGametime = function(callbackOnGametime) {
    return callbackOnGametime(10);
  };

  FakeServer.prototype.onMapSegment = function(callbackOnMapSegment) {
    this.callbackOnMapSegment = callbackOnMapSegment;
  };

  FakeServer.prototype.askForMapSegment = function(num) {};

  return FakeServer;

})();
